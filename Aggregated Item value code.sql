CREATE OR REPLACE TEMP TABLE AGGREGATE_APPAREL_BASE AS
SELECT DISTINCT EXTERNALORDERID,
                CUSTOMERORDERTYPE,
                COUNT(DISTINCT ORDERID) AS ORDERCOUNT
FROM
(SELECT 
cus.ORDDATE,
cus.ORDERDATE,
cus.EXTERNALORDERID, 
cus.CUSTOMERORDERTYPE,
cus.ORDERTOTAL,
cus.BILLSTATE,
st.ORDERID,
st.STR_ID,
st.SHIPMENTTYPE,
so.SKU,
so.ORIGINALQUANTITY
FROM KSFPA.OMS.CUSTOMERORDER_REALTIME cus
INNER JOIN KSFPA.OMS.STOREORDER_REALTIME st
ON (st.EXTERNALORDERID = cus.EXTERNALORDERID
AND st.ORDERID = cus.ORDERID)
INNER JOIN KSFPA.OMS.STOREORDERITEMS_REALTIME so
ON (so.ORDERID = st.ORDERID)
INNER JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_PRODUCT PROD
ON so.SKU = PROD.PRODUCT_KEYCODE
WHERE TO_DATE(cus.ORDERDATE) BETWEEN '2022-06-27' AND '2024-05-26'
AND st.STR_ID NOT IN ('9998','9999','9996','9997')
AND PROD.RBU_CODE NOT IN( 'undefined'
)
)
WHERE LTRIM(RTRIM(SHIPMENTTYPE)) = 'Original'
-- AND EXTERNALORDERID= 72435489
GROUP BY 1,2;

CREATE OR REPLACE TEMP TABLE AGGREGATED_AOV_ORDERS_APPAREL AS
SELECT ACCOUNTING_YEAR,
       ACCOUNTING_WEEK_NUMBER_IN_YEAR,
       FY_PW,
       CUSTOMERORDERTYPE,
       -- SUM((CASE WHEN ORDERCOUNT >1 THEN RECD_SALES END))/SUM((CASE WHEN ORDERCOUNT >1 THEN UNITS END)) AS ASP,
       COUNT(DISTINCT(CASE WHEN ORDERCOUNT > 1 THEN EXTERNALORDERID END)) AS AGGREGATED_ORDERS,
       SUM(CASE WHEN ORDERCOUNT > 1 THEN SALES END)/COUNT(DISTINCT(CASE WHEN ORDERCOUNT > 1 
       THEN EXTERNALORDERID END)) AS AGGREGATED_AOV,
       SUM(CASE WHEN ORDERCOUNT = 1 THEN SALES END)/COUNT(DISTINCT(CASE WHEN ORDERCOUNT = 1
       THEN EXTERNALORDERID END)) AS NON_AGGREGATED_AOV,
       SUM(CASE WHEN ORDERCOUNT > 1 THEN RECD_SALES END)/COUNT(DISTINCT(CASE WHEN ORDERCOUNT > 1 
       THEN EXTERNALORDERID END)) AS AGGREGATED_ITEM_AOV,
       SUM(CASE WHEN ORDERCOUNT = 1 THEN RECD_SALES END)/COUNT(DISTINCT(CASE WHEN ORDERCOUNT = 1
       THEN EXTERNALORDERID END)) AS NON_AGGREGATED_ITEM_AOV
FROM 
(SELECT DISTINCT ACCOUNTING_YEAR,
        ACCOUNTING_WEEK_NUMBER_IN_YEAR,
        FY_PW,
     EXTERNALORDERID,
     CUSTOMERORDERTYPE,
     SUM(RECD_SALES) AS RECD_SALES,
     SUM(UNITS) AS UNITS,
     SALES,
     ORDERCOUNT
     FROM
(SELECT DISTINCT ACCOUNTING_YEAR,
        ACCOUNTING_WEEK_NUMBER_IN_YEAR,
     CONCAT('FY',ACCOUNTING_YEAR,'P',RIGHT(ACCOUNTING_PERIOD_NUMBER,2),'W',ACCOUNTING_WEEK_NUMBER)                AS FY_PW,
     so.EXTERNALORDERID,
     cus.CUSTOMERORDERTYPE,
     soi.SKU,
     so.STOREORDERTOTAL AS SALES,
     CASE WHEN LTRIM(RTRIM(SHIPMENTTYPE)) = 'Original' 
          AND RBU_CODE NOT IN( 'undefined')
          THEN soi.ORIGINALQUANTITY * soi.UNITPRICE ELSE 0 END AS RECD_SALES,
     soi.ORIGINALQUANTITY as UNITS,
     AT.ORDERCOUNT
FROM KSFPA.OMS.CUSTOMERORDER_REALTIME cus 
INNER JOIN KSFPA.OMS.STOREORDER_REALTIME so
ON (so.EXTERNALORDERID = cus.EXTERNALORDERID
AND so.ORDERID = cus.ORDERID)
INNER JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_DATE DD
ON DD.DATE = cus.orddate 
INNER JOIN KSFPA.OMS.STOREORDERITEMS_REALTIME soi
ON soi.ORDERID = so.ORDERID
INNER JOIN KSFPA.ONLINE_UGAM_PVT.AGGREGATE_APPAREL_BASE AT
ON AT.EXTERNALORDERID = cus.EXTERNALORDERID
INNER JOIN KSF_SOPHIA_DATA_INTELLIGENCE_HUB_PROD.COMMON_DIMENSIONS.DIM_PRODUCT PROD
ON soi.SKU = PROD.PRODUCT_KEYCODE
-- WHERE LTRIM(RTRIM(SHIPMENTTYPE)) = 'Original'
-- AND so.EXTERNALORDERID = 354984850
AND TO_DATE(cus.ORDERDATE) BETWEEN '2022-06-27' AND '2024-05-26'
AND so.STR_ID NOT IN ('9998','9999','9996','9997')
AND TO_VARCHAR(PRODUCT_KEYCODE) != 'undefined'
--GROUP BY 1,2,3,4,5
ORDER BY 1,2)
GROUP BY 1,2,3,4,5,8,9)
-- WHERE AP_GM_FLAG = 'GM'
GROUP BY 1,2,3,4;

create or replace view KSFPA.ONLINE_UGAM_PVT.AGGREGATED_APPAREL_VALUE(
	FY_PW,
	CUSTOMERORDERTYPE,
	YOY_AGGREGATED_VALUE
) as
SELECT FY_PW,
       CUSTOMERORDERTYPE,
       TY_AGGREGATED_VALUE - LY_AGGREGATED_VALUE AS YOY_AGGREGATED_VALUE
FROM
(SELECT AG1.FY_PW,
        DENSE_RANK() OVER(ORDER BY AG1.FY_PW DESC) AS FY_PW_RANK,
        AG1.CUSTOMERORDERTYPE,
        (AG1.AGGREGATED_AOV - AG1.NON_AGGREGATED_AOV)*AG1.AGGREGATED_ORDERS AS 
        TY_AGGREGATED_VALUE,
        (AG2.AGGREGATED_AOV - AG2.NON_AGGREGATED_AOV)*AG2.AGGREGATED_ORDERS AS                        LY_AGGREGATED_VALUE,
        (AG1.AGGREGATED_ITEM_AOV - AG1.NON_AGGREGATED_ITEM_AOV)*AG1.AGGREGATED_ORDERS AS 
        TY_AGGREGATED_ITEM_VALUE,
        (AG2.AGGREGATED_ITEM_AOV - AG2.NON_AGGREGATED_ITEM_AOV)*AG2.AGGREGATED_ORDERS AS                        LY_AGGREGATED_ITEM_VALUE
        -- AG1.ASP AS ASP_TY,
        -- AG2.ASP AS ASP_LY
FROM AGGREGATED_AOV_ORDERS_APPAREL AG1
INNER JOIN AGGREGATED_AOV_ORDERS_APPAREL AG2
ON AG1.ACCOUNTING_YEAR-1= AG2.ACCOUNTING_YEAR
AND AG1.ACCOUNTING_WEEK_NUMBER_IN_YEAR = AG2.ACCOUNTING_WEEK_NUMBER_IN_YEAR
AND AG1.CUSTOMERORDERTYPE = AG2.CUSTOMERORDERTYPE)
WHERE FY_PW_RANK=1 ;